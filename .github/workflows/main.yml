name: 'publish'

on:
  push:
    branches:
      - main

# This workflow will trigger on each push to the `release` branch to create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # - platform: 'macos-latest' # for Arm based macs (M1 and above).
          #   args: '--target aarch64-apple-darwin'
          # - platform: 'macos-latest' # for Intel based macs.
          #   args: '--target x86_64-apple-darwin'
          # - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
          #   args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.
        # Removed libwebkit2gtk-4.0-dev

      # - name: Build daemon
      #   # if: matrix.os == 'windows-latest'
      #   run: |
      #     Set-Location src-daemon
      #     Write-Host "Current directory: $(Get-Location)"
      #     cargo build --release
      #     $TRIPLE=$(Split-Path -Path $TRIPLE -Leaf)
      #     Rename-Item -Path "target\release\src-daemon.exe" -NewName "test-daemon-$TRIPLE.exe"
      #     dir target\release

      - name: Get Rust Target Triple
        run: |
          $host_line = rustc -vV | Select-String "host"
          $target_triple = $host_line -replace "host:\s+", ""
          echo "TARGET_TRIPLE=$target_triple" >> $env:GITHUB_ENV

      - name: Print Rust Target Triple
        run: echo The Rust target triple is: $env:TARGET_TRIPLE

      # - name: install frontend dependencies
      #   run: npm install # change this to npm, pnpm or bun depending on which one you use.

      # - uses: tauri-apps/tauri-action@v0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
      #     releaseName: 'App v__VERSION__'
      #     releaseBody: 'See the assets to download this version and install.'
      #     releaseDraft: true
      #     prerelease: false
      #     args: ${{ matrix.args }}
